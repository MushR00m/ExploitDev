#include "stdafx.h"

vector<Process> PsFilterMitigations(const shared_ptr<Interface>& Intf, const shared_ptr<ApiTable>& DynamicApis, vector<Process> &PsVec, uint64_t qwFilterLackingFlags, uint64_t qwFilterForActiveFlags) {
	vector<Process> FilteredPsVec;

	for (vector<Process>::iterator Itr = PsVec.begin(); Itr != PsVec.end(); ++Itr) {
		if (Itr->QueriedMitigationPolicies()) {
			if (qwFilterLackingFlags) {
				if ((qwFilterLackingFlags & SEARCH_FLAG_CFG) && !Itr->CfgEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterLackingFlags & SEARCH_FLAG_ASLR) && !Itr->AslrEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterLackingFlags & SEARCH_FLAG_CIG) && !Itr->CigEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterLackingFlags & SEARCH_FLAG_ACG) && !Itr->AcgEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterLackingFlags & SEARCH_FLAG_DEP) && !Itr->DepEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
			}
			else if (qwFilterForActiveFlags) {
				if ((qwFilterForActiveFlags & SEARCH_FLAG_CFG) && Itr->CfgEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterForActiveFlags & SEARCH_FLAG_ASLR) && Itr->AslrEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterForActiveFlags & SEARCH_FLAG_CIG) && Itr->CigEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterForActiveFlags & SEARCH_FLAG_ACG) && Itr->AcgEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
				else if ((qwFilterForActiveFlags & SEARCH_FLAG_DEP) && Itr->DepEnabled()) {
					FilteredPsVec.push_back(*Itr);
				}
			}
		}
	}

	return FilteredPsVec;
}